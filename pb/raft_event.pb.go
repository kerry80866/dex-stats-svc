// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: raft_event.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetaEventType int32

const (
	MetaEventType_META_UNKNOWN MetaEventType = 0
	MetaEventType_SUPPLY       MetaEventType = 1
	MetaEventType_ICON         MetaEventType = 2
	MetaEventType_NAME_SYMBOL  MetaEventType = 3
)

// Enum value maps for MetaEventType.
var (
	MetaEventType_name = map[int32]string{
		0: "META_UNKNOWN",
		1: "SUPPLY",
		2: "ICON",
		3: "NAME_SYMBOL",
	}
	MetaEventType_value = map[string]int32{
		"META_UNKNOWN": 0,
		"SUPPLY":       1,
		"ICON":         2,
		"NAME_SYMBOL":  3,
	}
)

func (x MetaEventType) Enum() *MetaEventType {
	p := new(MetaEventType)
	*p = x
	return p
}

func (x MetaEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetaEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_raft_event_proto_enumTypes[0].Descriptor()
}

func (MetaEventType) Type() protoreflect.EnumType {
	return &file_raft_event_proto_enumTypes[0]
}

func (x MetaEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetaEventType.Descriptor instead.
func (MetaEventType) EnumDescriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{0}
}

type MetaEvents struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint32                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	ChainId       uint32                 `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Events        []*MetaEvent           `protobuf:"bytes,5,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetaEvents) Reset() {
	*x = MetaEvents{}
	mi := &file_raft_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaEvents) ProtoMessage() {}

func (x *MetaEvents) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaEvents.ProtoReflect.Descriptor instead.
func (*MetaEvents) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{0}
}

func (x *MetaEvents) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *MetaEvents) GetChainId() uint32 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *MetaEvents) GetEvents() []*MetaEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type MetaEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Event:
	//
	//	*MetaEvent_Supply
	//	*MetaEvent_NameSymbol
	//	*MetaEvent_Icon
	Event         isMetaEvent_Event `protobuf_oneof:"event"`
	UpdateTime    int64             `protobuf:"varint,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetaEvent) Reset() {
	*x = MetaEvent{}
	mi := &file_raft_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaEvent) ProtoMessage() {}

func (x *MetaEvent) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaEvent.ProtoReflect.Descriptor instead.
func (*MetaEvent) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{1}
}

func (x *MetaEvent) GetEvent() isMetaEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *MetaEvent) GetSupply() *SupplyEvent {
	if x != nil {
		if x, ok := x.Event.(*MetaEvent_Supply); ok {
			return x.Supply
		}
	}
	return nil
}

func (x *MetaEvent) GetNameSymbol() *NameSymbolEvent {
	if x != nil {
		if x, ok := x.Event.(*MetaEvent_NameSymbol); ok {
			return x.NameSymbol
		}
	}
	return nil
}

func (x *MetaEvent) GetIcon() *IconEvent {
	if x != nil {
		if x, ok := x.Event.(*MetaEvent_Icon); ok {
			return x.Icon
		}
	}
	return nil
}

func (x *MetaEvent) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type isMetaEvent_Event interface {
	isMetaEvent_Event()
}

type MetaEvent_Supply struct {
	Supply *SupplyEvent `protobuf:"bytes,1,opt,name=supply,proto3,oneof"`
}

type MetaEvent_NameSymbol struct {
	NameSymbol *NameSymbolEvent `protobuf:"bytes,2,opt,name=name_symbol,json=nameSymbol,proto3,oneof"`
}

type MetaEvent_Icon struct {
	Icon *IconEvent `protobuf:"bytes,3,opt,name=icon,proto3,oneof"`
}

func (*MetaEvent_Supply) isMetaEvent_Event() {}

func (*MetaEvent_NameSymbol) isMetaEvent_Event() {}

func (*MetaEvent_Icon) isMetaEvent_Event() {}

type SupplyEvent struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Type              MetaEventType          `protobuf:"varint,1,opt,name=type,proto3,enum=pb.MetaEventType" json:"type,omitempty"`
	TokenAddress      []byte                 `protobuf:"bytes,2,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	Decimals          uint32                 `protobuf:"varint,3,opt,name=decimals,proto3" json:"decimals,omitempty"`
	TotalSupply       string                 `protobuf:"bytes,4,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
	MaxSupply         string                 `protobuf:"bytes,5,opt,name=max_supply,json=maxSupply,proto3" json:"max_supply,omitempty"`
	CirculatingSupply string                 `protobuf:"bytes,6,opt,name=circulating_supply,json=circulatingSupply,proto3" json:"circulating_supply,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SupplyEvent) Reset() {
	*x = SupplyEvent{}
	mi := &file_raft_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupplyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplyEvent) ProtoMessage() {}

func (x *SupplyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplyEvent.ProtoReflect.Descriptor instead.
func (*SupplyEvent) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{2}
}

func (x *SupplyEvent) GetType() MetaEventType {
	if x != nil {
		return x.Type
	}
	return MetaEventType_META_UNKNOWN
}

func (x *SupplyEvent) GetTokenAddress() []byte {
	if x != nil {
		return x.TokenAddress
	}
	return nil
}

func (x *SupplyEvent) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *SupplyEvent) GetTotalSupply() string {
	if x != nil {
		return x.TotalSupply
	}
	return ""
}

func (x *SupplyEvent) GetMaxSupply() string {
	if x != nil {
		return x.MaxSupply
	}
	return ""
}

func (x *SupplyEvent) GetCirculatingSupply() string {
	if x != nil {
		return x.CirculatingSupply
	}
	return ""
}

type NameSymbolEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          MetaEventType          `protobuf:"varint,1,opt,name=type,proto3,enum=pb.MetaEventType" json:"type,omitempty"`
	TokenAddress  []byte                 `protobuf:"bytes,2,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Symbol        string                 `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameSymbolEvent) Reset() {
	*x = NameSymbolEvent{}
	mi := &file_raft_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameSymbolEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameSymbolEvent) ProtoMessage() {}

func (x *NameSymbolEvent) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameSymbolEvent.ProtoReflect.Descriptor instead.
func (*NameSymbolEvent) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{3}
}

func (x *NameSymbolEvent) GetType() MetaEventType {
	if x != nil {
		return x.Type
	}
	return MetaEventType_META_UNKNOWN
}

func (x *NameSymbolEvent) GetTokenAddress() []byte {
	if x != nil {
		return x.TokenAddress
	}
	return nil
}

func (x *NameSymbolEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NameSymbolEvent) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type IconEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          MetaEventType          `protobuf:"varint,1,opt,name=type,proto3,enum=pb.MetaEventType" json:"type,omitempty"`
	TokenAddress  []byte                 `protobuf:"bytes,2,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	Icon          string                 `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Uri           string                 `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IconEvent) Reset() {
	*x = IconEvent{}
	mi := &file_raft_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IconEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IconEvent) ProtoMessage() {}

func (x *IconEvent) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IconEvent.ProtoReflect.Descriptor instead.
func (*IconEvent) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{4}
}

func (x *IconEvent) GetType() MetaEventType {
	if x != nil {
		return x.Type
	}
	return MetaEventType_META_UNKNOWN
}

func (x *IconEvent) GetTokenAddress() []byte {
	if x != nil {
		return x.TokenAddress
	}
	return nil
}

func (x *IconEvent) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *IconEvent) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

// 池子杠杆报告事件
type PoolLpReportEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PoolAddress   []byte                 `protobuf:"bytes,1,opt,name=pool_address,json=poolAddress,proto3" json:"pool_address,omitempty"`          // 交易池地址
	Leverage      int32                  `protobuf:"varint,2,opt,name=leverage,proto3" json:"leverage,omitempty"`                                  // 杠杆倍数（0表示不可用）
	Direction     int32                  `protobuf:"varint,3,opt,name=direction,proto3" json:"direction,omitempty"`                                // 方向（例如：0=多头，1=空头）
	ReportTime    uint32                 `protobuf:"varint,4,opt,name=report_time,json=reportTime,proto3" json:"report_time,omitempty"`            // 报告时间（Unix 秒级时间戳）
	ListingTimeMs uint64                 `protobuf:"varint,5,opt,name=listing_time_ms,json=listingTimeMs,proto3" json:"listing_time_ms,omitempty"` // 最早的上架时间（时间戳，毫秒）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PoolLpReportEvent) Reset() {
	*x = PoolLpReportEvent{}
	mi := &file_raft_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PoolLpReportEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolLpReportEvent) ProtoMessage() {}

func (x *PoolLpReportEvent) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolLpReportEvent.ProtoReflect.Descriptor instead.
func (*PoolLpReportEvent) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{5}
}

func (x *PoolLpReportEvent) GetPoolAddress() []byte {
	if x != nil {
		return x.PoolAddress
	}
	return nil
}

func (x *PoolLpReportEvent) GetLeverage() int32 {
	if x != nil {
		return x.Leverage
	}
	return 0
}

func (x *PoolLpReportEvent) GetDirection() int32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *PoolLpReportEvent) GetReportTime() uint32 {
	if x != nil {
		return x.ReportTime
	}
	return 0
}

func (x *PoolLpReportEvent) GetListingTimeMs() uint64 {
	if x != nil {
		return x.ListingTimeMs
	}
	return 0
}

type PoolLpReportEvents struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*PoolLpReportEvent   `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PoolLpReportEvents) Reset() {
	*x = PoolLpReportEvents{}
	mi := &file_raft_event_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PoolLpReportEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolLpReportEvents) ProtoMessage() {}

func (x *PoolLpReportEvents) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolLpReportEvents.ProtoReflect.Descriptor instead.
func (*PoolLpReportEvents) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{6}
}

func (x *PoolLpReportEvents) GetEvents() []*PoolLpReportEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type TotalSupplyEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TokenAddress  []byte                 `protobuf:"bytes,1,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	TotalSupply   string                 `protobuf:"bytes,2,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
	IsBurned      bool                   `protobuf:"varint,3,opt,name=is_burned,json=isBurned,proto3" json:"is_burned,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TotalSupplyEvent) Reset() {
	*x = TotalSupplyEvent{}
	mi := &file_raft_event_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TotalSupplyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalSupplyEvent) ProtoMessage() {}

func (x *TotalSupplyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalSupplyEvent.ProtoReflect.Descriptor instead.
func (*TotalSupplyEvent) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{7}
}

func (x *TotalSupplyEvent) GetTokenAddress() []byte {
	if x != nil {
		return x.TokenAddress
	}
	return nil
}

func (x *TotalSupplyEvent) GetTotalSupply() string {
	if x != nil {
		return x.TotalSupply
	}
	return ""
}

func (x *TotalSupplyEvent) GetIsBurned() bool {
	if x != nil {
		return x.IsBurned
	}
	return false
}

type TotalSupplyEvents struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*TotalSupplyEvent    `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	UpdateTime    int64                  `protobuf:"varint,2,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TotalSupplyEvents) Reset() {
	*x = TotalSupplyEvents{}
	mi := &file_raft_event_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TotalSupplyEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalSupplyEvents) ProtoMessage() {}

func (x *TotalSupplyEvents) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalSupplyEvents.ProtoReflect.Descriptor instead.
func (*TotalSupplyEvents) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{8}
}

func (x *TotalSupplyEvents) GetEvents() []*TotalSupplyEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *TotalSupplyEvents) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type PoolTickerPushDoneEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PoolAddress   []byte                 `protobuf:"bytes,1,opt,name=pool_address,json=poolAddress,proto3" json:"pool_address,omitempty"`
	BlockNumber   uint64                 `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PoolTickerPushDoneEvent) Reset() {
	*x = PoolTickerPushDoneEvent{}
	mi := &file_raft_event_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PoolTickerPushDoneEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolTickerPushDoneEvent) ProtoMessage() {}

func (x *PoolTickerPushDoneEvent) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolTickerPushDoneEvent.ProtoReflect.Descriptor instead.
func (*PoolTickerPushDoneEvent) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{9}
}

func (x *PoolTickerPushDoneEvent) GetPoolAddress() []byte {
	if x != nil {
		return x.PoolAddress
	}
	return nil
}

func (x *PoolTickerPushDoneEvent) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

type PoolTickerPushDoneEvents struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Events        []*PoolTickerPushDoneEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PoolTickerPushDoneEvents) Reset() {
	*x = PoolTickerPushDoneEvents{}
	mi := &file_raft_event_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PoolTickerPushDoneEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolTickerPushDoneEvents) ProtoMessage() {}

func (x *PoolTickerPushDoneEvents) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolTickerPushDoneEvents.ProtoReflect.Descriptor instead.
func (*PoolTickerPushDoneEvents) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{10}
}

func (x *PoolTickerPushDoneEvents) GetEvents() []*PoolTickerPushDoneEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type HolderCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TokenAddress  []byte                 `protobuf:"bytes,1,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"` // token 地址
	HolderCount   uint64                 `protobuf:"varint,2,opt,name=holder_count,json=holderCount,proto3" json:"holder_count,omitempty"`
	UpdateTime    int64                  `protobuf:"varint,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` // 更新时间（Unix timestamp 秒）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HolderCount) Reset() {
	*x = HolderCount{}
	mi := &file_raft_event_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HolderCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HolderCount) ProtoMessage() {}

func (x *HolderCount) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HolderCount.ProtoReflect.Descriptor instead.
func (*HolderCount) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{11}
}

func (x *HolderCount) GetTokenAddress() []byte {
	if x != nil {
		return x.TokenAddress
	}
	return nil
}

func (x *HolderCount) GetHolderCount() uint64 {
	if x != nil {
		return x.HolderCount
	}
	return 0
}

func (x *HolderCount) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type HolderCountEvents struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*HolderCount         `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HolderCountEvents) Reset() {
	*x = HolderCountEvents{}
	mi := &file_raft_event_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HolderCountEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HolderCountEvents) ProtoMessage() {}

func (x *HolderCountEvents) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HolderCountEvents.ProtoReflect.Descriptor instead.
func (*HolderCountEvents) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{12}
}

func (x *HolderCountEvents) GetEvents() []*HolderCount {
	if x != nil {
		return x.Events
	}
	return nil
}

type TopHolders struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TokenAddress  []byte                 `protobuf:"bytes,1,opt,name=token_address,json=tokenAddress,proto3" json:"token_address,omitempty"`
	Holders       []*Balance             `protobuf:"bytes,2,rep,name=holders,proto3" json:"holders,omitempty"`
	UpdateTime    int64                  `protobuf:"varint,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopHolders) Reset() {
	*x = TopHolders{}
	mi := &file_raft_event_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopHolders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopHolders) ProtoMessage() {}

func (x *TopHolders) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopHolders.ProtoReflect.Descriptor instead.
func (*TopHolders) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{13}
}

func (x *TopHolders) GetTokenAddress() []byte {
	if x != nil {
		return x.TokenAddress
	}
	return nil
}

func (x *TopHolders) GetHolders() []*Balance {
	if x != nil {
		return x.Holders
	}
	return nil
}

func (x *TopHolders) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type TopHoldersEvents struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*TopHolders          `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopHoldersEvents) Reset() {
	*x = TopHoldersEvents{}
	mi := &file_raft_event_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopHoldersEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopHoldersEvents) ProtoMessage() {}

func (x *TopHoldersEvents) ProtoReflect() protoreflect.Message {
	mi := &file_raft_event_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopHoldersEvents.ProtoReflect.Descriptor instead.
func (*TopHoldersEvents) Descriptor() ([]byte, []int) {
	return file_raft_event_proto_rawDescGZIP(), []int{14}
}

func (x *TopHoldersEvents) GetEvents() []*TopHolders {
	if x != nil {
		return x.Events
	}
	return nil
}

var File_raft_event_proto protoreflect.FileDescriptor

const file_raft_event_proto_rawDesc = "" +
	"\n" +
	"\x10raft_event.proto\x12\x02pb\x1a\x12ingest_query.proto\"h\n" +
	"\n" +
	"MetaEvents\x12\x18\n" +
	"\aversion\x18\x01 \x01(\rR\aversion\x12\x19\n" +
	"\bchain_id\x18\x02 \x01(\rR\achainId\x12%\n" +
	"\x06events\x18\x05 \x03(\v2\r.pb.MetaEventR\x06events\"\xbd\x01\n" +
	"\tMetaEvent\x12)\n" +
	"\x06supply\x18\x01 \x01(\v2\x0f.pb.SupplyEventH\x00R\x06supply\x126\n" +
	"\vname_symbol\x18\x02 \x01(\v2\x13.pb.NameSymbolEventH\x00R\n" +
	"nameSymbol\x12#\n" +
	"\x04icon\x18\x03 \x01(\v2\r.pb.IconEventH\x00R\x04icon\x12\x1f\n" +
	"\vupdate_time\x18\x04 \x01(\x03R\n" +
	"updateTimeB\a\n" +
	"\x05event\"\xe6\x01\n" +
	"\vSupplyEvent\x12%\n" +
	"\x04type\x18\x01 \x01(\x0e2\x11.pb.MetaEventTypeR\x04type\x12#\n" +
	"\rtoken_address\x18\x02 \x01(\fR\ftokenAddress\x12\x1a\n" +
	"\bdecimals\x18\x03 \x01(\rR\bdecimals\x12!\n" +
	"\ftotal_supply\x18\x04 \x01(\tR\vtotalSupply\x12\x1d\n" +
	"\n" +
	"max_supply\x18\x05 \x01(\tR\tmaxSupply\x12-\n" +
	"\x12circulating_supply\x18\x06 \x01(\tR\x11circulatingSupply\"\x89\x01\n" +
	"\x0fNameSymbolEvent\x12%\n" +
	"\x04type\x18\x01 \x01(\x0e2\x11.pb.MetaEventTypeR\x04type\x12#\n" +
	"\rtoken_address\x18\x02 \x01(\fR\ftokenAddress\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x16\n" +
	"\x06symbol\x18\x04 \x01(\tR\x06symbol\"}\n" +
	"\tIconEvent\x12%\n" +
	"\x04type\x18\x01 \x01(\x0e2\x11.pb.MetaEventTypeR\x04type\x12#\n" +
	"\rtoken_address\x18\x02 \x01(\fR\ftokenAddress\x12\x12\n" +
	"\x04icon\x18\x03 \x01(\tR\x04icon\x12\x10\n" +
	"\x03uri\x18\x04 \x01(\tR\x03uri\"\xb9\x01\n" +
	"\x11PoolLpReportEvent\x12!\n" +
	"\fpool_address\x18\x01 \x01(\fR\vpoolAddress\x12\x1a\n" +
	"\bleverage\x18\x02 \x01(\x05R\bleverage\x12\x1c\n" +
	"\tdirection\x18\x03 \x01(\x05R\tdirection\x12\x1f\n" +
	"\vreport_time\x18\x04 \x01(\rR\n" +
	"reportTime\x12&\n" +
	"\x0flisting_time_ms\x18\x05 \x01(\x04R\rlistingTimeMs\"C\n" +
	"\x12PoolLpReportEvents\x12-\n" +
	"\x06events\x18\x01 \x03(\v2\x15.pb.PoolLpReportEventR\x06events\"w\n" +
	"\x10TotalSupplyEvent\x12#\n" +
	"\rtoken_address\x18\x01 \x01(\fR\ftokenAddress\x12!\n" +
	"\ftotal_supply\x18\x02 \x01(\tR\vtotalSupply\x12\x1b\n" +
	"\tis_burned\x18\x03 \x01(\bR\bisBurned\"b\n" +
	"\x11TotalSupplyEvents\x12,\n" +
	"\x06events\x18\x01 \x03(\v2\x14.pb.TotalSupplyEventR\x06events\x12\x1f\n" +
	"\vupdate_time\x18\x02 \x01(\x03R\n" +
	"updateTime\"_\n" +
	"\x17PoolTickerPushDoneEvent\x12!\n" +
	"\fpool_address\x18\x01 \x01(\fR\vpoolAddress\x12!\n" +
	"\fblock_number\x18\x02 \x01(\x04R\vblockNumber\"O\n" +
	"\x18PoolTickerPushDoneEvents\x123\n" +
	"\x06events\x18\x01 \x03(\v2\x1b.pb.PoolTickerPushDoneEventR\x06events\"v\n" +
	"\vHolderCount\x12#\n" +
	"\rtoken_address\x18\x01 \x01(\fR\ftokenAddress\x12!\n" +
	"\fholder_count\x18\x02 \x01(\x04R\vholderCount\x12\x1f\n" +
	"\vupdate_time\x18\x03 \x01(\x03R\n" +
	"updateTime\"<\n" +
	"\x11HolderCountEvents\x12'\n" +
	"\x06events\x18\x01 \x03(\v2\x0f.pb.HolderCountR\x06events\"y\n" +
	"\n" +
	"TopHolders\x12#\n" +
	"\rtoken_address\x18\x01 \x01(\fR\ftokenAddress\x12%\n" +
	"\aholders\x18\x02 \x03(\v2\v.pb.BalanceR\aholders\x12\x1f\n" +
	"\vupdate_time\x18\x03 \x01(\x03R\n" +
	"updateTime\":\n" +
	"\x10TopHoldersEvents\x12&\n" +
	"\x06events\x18\x01 \x03(\v2\x0e.pb.TopHoldersR\x06events*H\n" +
	"\rMetaEventType\x12\x10\n" +
	"\fMETA_UNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06SUPPLY\x10\x01\x12\b\n" +
	"\x04ICON\x10\x02\x12\x0f\n" +
	"\vNAME_SYMBOL\x10\x03B\x15Z\x13dex-stats-sol/pb;pbb\x06proto3"

var (
	file_raft_event_proto_rawDescOnce sync.Once
	file_raft_event_proto_rawDescData []byte
)

func file_raft_event_proto_rawDescGZIP() []byte {
	file_raft_event_proto_rawDescOnce.Do(func() {
		file_raft_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_raft_event_proto_rawDesc), len(file_raft_event_proto_rawDesc)))
	})
	return file_raft_event_proto_rawDescData
}

var file_raft_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_raft_event_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_raft_event_proto_goTypes = []any{
	(MetaEventType)(0),               // 0: pb.MetaEventType
	(*MetaEvents)(nil),               // 1: pb.MetaEvents
	(*MetaEvent)(nil),                // 2: pb.MetaEvent
	(*SupplyEvent)(nil),              // 3: pb.SupplyEvent
	(*NameSymbolEvent)(nil),          // 4: pb.NameSymbolEvent
	(*IconEvent)(nil),                // 5: pb.IconEvent
	(*PoolLpReportEvent)(nil),        // 6: pb.PoolLpReportEvent
	(*PoolLpReportEvents)(nil),       // 7: pb.PoolLpReportEvents
	(*TotalSupplyEvent)(nil),         // 8: pb.TotalSupplyEvent
	(*TotalSupplyEvents)(nil),        // 9: pb.TotalSupplyEvents
	(*PoolTickerPushDoneEvent)(nil),  // 10: pb.PoolTickerPushDoneEvent
	(*PoolTickerPushDoneEvents)(nil), // 11: pb.PoolTickerPushDoneEvents
	(*HolderCount)(nil),              // 12: pb.HolderCount
	(*HolderCountEvents)(nil),        // 13: pb.HolderCountEvents
	(*TopHolders)(nil),               // 14: pb.TopHolders
	(*TopHoldersEvents)(nil),         // 15: pb.TopHoldersEvents
	(*Balance)(nil),                  // 16: pb.Balance
}
var file_raft_event_proto_depIdxs = []int32{
	2,  // 0: pb.MetaEvents.events:type_name -> pb.MetaEvent
	3,  // 1: pb.MetaEvent.supply:type_name -> pb.SupplyEvent
	4,  // 2: pb.MetaEvent.name_symbol:type_name -> pb.NameSymbolEvent
	5,  // 3: pb.MetaEvent.icon:type_name -> pb.IconEvent
	0,  // 4: pb.SupplyEvent.type:type_name -> pb.MetaEventType
	0,  // 5: pb.NameSymbolEvent.type:type_name -> pb.MetaEventType
	0,  // 6: pb.IconEvent.type:type_name -> pb.MetaEventType
	6,  // 7: pb.PoolLpReportEvents.events:type_name -> pb.PoolLpReportEvent
	8,  // 8: pb.TotalSupplyEvents.events:type_name -> pb.TotalSupplyEvent
	10, // 9: pb.PoolTickerPushDoneEvents.events:type_name -> pb.PoolTickerPushDoneEvent
	12, // 10: pb.HolderCountEvents.events:type_name -> pb.HolderCount
	16, // 11: pb.TopHolders.holders:type_name -> pb.Balance
	14, // 12: pb.TopHoldersEvents.events:type_name -> pb.TopHolders
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_raft_event_proto_init() }
func file_raft_event_proto_init() {
	if File_raft_event_proto != nil {
		return
	}
	file_ingest_query_proto_init()
	file_raft_event_proto_msgTypes[1].OneofWrappers = []any{
		(*MetaEvent_Supply)(nil),
		(*MetaEvent_NameSymbol)(nil),
		(*MetaEvent_Icon)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_raft_event_proto_rawDesc), len(file_raft_event_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_raft_event_proto_goTypes,
		DependencyIndexes: file_raft_event_proto_depIdxs,
		EnumInfos:         file_raft_event_proto_enumTypes,
		MessageInfos:      file_raft_event_proto_msgTypes,
	}.Build()
	File_raft_event_proto = out.File
	file_raft_event_proto_goTypes = nil
	file_raft_event_proto_depIdxs = nil
}
